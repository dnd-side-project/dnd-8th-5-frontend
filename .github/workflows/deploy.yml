name: Deploy to S3 and CloudFront

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üîî Check out source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è Setup env
        run: |
          echo "VITE_API_PATH=${{secrets.VITE_API_PATH}}" >> .env
          echo "VITE_GA_TRACKING_ID=${{secrets.VITE_GA_TRACKING_ID}}" >> .env
          echo "PUBLIC_URL=${{secrets.PUBLIC_URL}}" >> .env
          echo "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}" >> .env
          echo "SENTRY_ORG=${{ secrets.SENTRY_ORG }}" >> .env
          echo "SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}" >> .env
          echo "RELEASE_VERSION=$(git rev-parse --short HEAD)" >> .env

      - name: üîê AWS Credential
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: üìÇ Install dependencies
        run: |
          yarn install

      - name: üèóÔ∏è Build project
        run: |
          export SENTRY_RELEASE=$(git rev-parse --short HEAD)
          export CI=false
          yarn build

      - name: üõ†Ô∏è Install Sentry CLI
        run: |
          curl -sL https://sentry.io/get-cli/ | bash

      - name: üîç Upload source maps to Sentry
        run: |
          sentry-cli releases new "$SENTRY_RELEASE"
          sentry-cli releases set-commits --auto --ignore-missing "$SENTRY_RELEASE"
          sentry-cli releases files "$SENTRY_RELEASE" upload-sourcemaps ./dist --rewrite
          sentry-cli releases finalize "$SENTRY_RELEASE"
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}

      - name: üöÄ Deploy to S3
        run: aws s3 sync dist/ s3://modutime-frontend --acl public-read
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: üìÑ Create invalidation in CloudFront
        uses: chetan/invalidate-cloudfront-action@v2
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_ID }}
          PATHS: '/*'
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
